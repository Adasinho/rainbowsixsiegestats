{"version":3,"sources":["Hooks/useDependency.js","views/SearchPlayerView.js","components/Window.js","components/SeasonLabel.js","views/SeasonsView.js","views/UserNavView.js","Hooks/useTableController.js","components/Table.js","views/WeaponsView.js","views/OperatorsView.js","views/UserView.js","views/ApplicationView.js","App.js","serviceWorker.js","index.js"],"names":["initialState","count","dependencies","reducer","state","action","type","Error","useDependency","useReducer","dispatch","console","log","SearchPlayerView","callback","useState","inputUser","setInputUser","users","setUsers","dependency","dAdd","dDelete","history","useHistory","userItem","user","key","p_id","className","onClick","id","push","p_name","onSubmit","event","axios","get","then","response","data","results","finally","preventDefault","placeholder","onChange","target","value","icon","faSearch","size","color","map","Window","title","stats","col","Object","entries","item","SeasonLabel","name","regions","bestRank","setBestRank","active","setActive","useEffect","best","values","max","region","src","image","alt","faChevronCircleDown","duration","height","matches","current","mmr","kills","deaths","wins","losses","abandons","regionStatsItem","SeasonsView","seasons","season","UserNavView","url","to","sortedState","sortedRecords","i","length","colNumber","sort","a","b","Table","attributes","records","firstFieldAttribute","rows","columns","tab","useTableController","sortBy","sortedAttribute","setSortedAttribute","handleClick","trToItem","tr","td","tdToItem","attribute","attributeToItem","WeaponsView","weapons","weaponsList","setWeaponsList","weaponsArray","weaponCategory","list","flat","forEach","weapon","bulletsFired","OperatorsView","elements","attackers","defenders","selected","setSelected","navElementToItem","element","extraClasses","navWindows","UserView","userId","useParams","useRouteMatch","path","player","setPlayer","setSeasons","setWeapons","setDefenders","setAttackers","getOperatorsByRole","operators","role","operatorsCopy","assign","val","filter","operator","attacker","badge","ctu","gadget","getSeasonsStats","apiPath","process","res","sortedTable","table","sortSeasonsOrderByNewer","catch","pvp","getPlayerStats","loadingSection","exact","component","overallWindow","general","playtime","toFixed","bulletsConnected","teamPlayWindow","assists","revives","gadgetsDestroyed","suicides","barricadesDeployed","reinforcementsDeployed","rappelBreaches","dbno","dbnoAssists","killsBrakdownWindow","blindKills","meleeKills","penetrationKills","headshots","playerStats","ApplicationView","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.446e85b3.chunk.js","sourcesContent":["import {useState, useReducer} from \"react\";\r\n\r\nconst initialState = {count: 0, dependencies: false};\r\n\r\nconst reducer = (state, action) => {\r\n    let count = state.count;\r\n    let dependencies = state.dependencies;\r\n\r\n    switch(action.type) {\r\n        case 'add':\r\n            if(state.count === 0) dependencies = true;\r\n            count++;\r\n\r\n            return {count, dependencies};\r\n        case 'delete':\r\n            if(state.count === 1) dependencies = false;\r\n            count--;\r\n\r\n            return {count, dependencies}\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nconst useDependency = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const addDependecy = () => {\r\n        console.log(\"counter before add \");\r\n        console.log(state);\r\n        dispatch({type: 'add'});\r\n    };\r\n\r\n    const deleteDependency = () => {\r\n        console.log(\"counter before delete \");\r\n        console.log(state);\r\n        dispatch({type: 'delete'});\r\n    };\r\n\r\n    return [state.dependencies, addDependecy, deleteDependency];\r\n};\r\nexport {useDependency};","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport {useDependency} from \"../Hooks/useDependency\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport \"../css/list.css\";\r\n\r\nconst SearchPlayerView = ({callback}) => {\r\n    const [inputUser, setInputUser] = useState(\"\");\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const [dependency, dAdd, dDelete] = useDependency();\r\n\r\n    let history = useHistory();\r\n\r\n    const getUsers = () => {\r\n        const searchAPI = \"https://r6tab.com/api/search.php?platform=uplay&search=\";\r\n\r\n        dAdd();\r\n\r\n        axios.get(searchAPI + inputUser)\r\n            .then((response) => {\r\n                console.log(response);\r\n                setUsers(response.data.results);\r\n            })\r\n            .finally((response) => {\r\n                dDelete();\r\n            })\r\n    };\r\n\r\n    const setUser = (id) => {\r\n        history.push(`/user/${id}`);\r\n    };\r\n\r\n    const usersSection = () => {\r\n        return (\r\n            <div className={\"col-6\"}>\r\n                <div className={\"users-list\"}>\r\n                    {users ? users.map(userItem) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userItem = (user) => {\r\n        return (\r\n            <div key={user.p_id} className={\"user\"} onClick={() => setUser(user.p_id)}>\r\n                <div className={\"name\"}>{user.p_name}</div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setInputUser(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        getUsers();\r\n        event.preventDefault();\r\n    };\r\n\r\n    const loadingSection = () => {\r\n        return (\r\n            <div className={\"loading\"}>\r\n                <ClipLoader size={50} color={\"#09d3ac\"} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <div className={\"container\"}>\r\n                <div className={\"row justify-center\"}>\r\n                    <div className={\"col-12\"}>\r\n                        <div className={\"title\"}>Rainbow Six Siege Stats</div>\r\n                    </div>\r\n                    <form className={\"col-6\"} onSubmit={handleSubmit}>\r\n                        <input placeholder={\"Type your username in R6\"} onChange={handleChange}>\r\n                        </input>\r\n                        <FontAwesomeIcon className={\"ml-3\"} icon={faSearch}/>\r\n                    </form>\r\n                </div>\r\n                <div className={\"row justify-center\"}>\r\n                    {dependency ? loadingSection() : usersSection()}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default SearchPlayerView;","import React from \"react\";\r\n\r\nconst Window = ({className, title, stats, col}) => {\r\n    const statsToItem = (item) => {\r\n        return  (\r\n            <div key={item[0]} className={`item col-${12/col}`}>\r\n                <div className={\"prop-name\"}>{item[0]}</div>\r\n                <div className={\"prop-value\"}>{item[1]}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className={\"window\"}>\r\n                <div className={\"title\"}>{title}</div>\r\n                <div className={\"items\"}>\r\n                    {stats ? Object.entries(stats).map(statsToItem) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Window;","import React, {useState, useEffect} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faChevronCircleDown} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AnimateHeight from \"react-animate-height\";\r\n\r\nimport \"../css/components/seasonLabel.css\";\r\n\r\nconst SeasonLabel = ({name, regions}) => {\r\n    const [bestRank, setBestRank] = useState(\"\");\r\n    const [active, setActive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let best = Object.values(regions)[0].max;\r\n\r\n        for(let region of Object.values(regions))\r\n            if (best.id < region.max.id) best = region.max;\r\n\r\n        setBestRank(best);\r\n    }, []);\r\n\r\n    const regionStatsItem = item => {\r\n        return (\r\n            <div className={\"region-stats\"}>\r\n                <div className={\"col-6\"}>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>MMR</div>\r\n                        <div className={\"value\"}>{item.current.mmr}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Kills</div>\r\n                        <div className={\"value\"}>{item.kills}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Deaths</div>\r\n                        <div className={\"value\"}>{item.deaths}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={\"col-6\"}>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Matches</div>\r\n                        <div className={\"value\"}>{item.matches}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Wins</div>\r\n                        <div className={\"value\"}>{item.wins}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Losses</div>\r\n                        <div className={\"value\"}>{item.losses}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Abandons</div>\r\n                        <div className={\"value\"}>{item.abandons}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const regionToItem = item => {\r\n        if(item.matches !== 0) return regionStatsItem(item);\r\n        else return null;\r\n    };\r\n\r\n    const handleClick = () => {\r\n        console.log(active);\r\n        setActive(!active);\r\n    };\r\n\r\n    return (\r\n        <div className={\"season-label col-12\"}>\r\n            <div className={\"head\"} onClick={handleClick}>\r\n                <div className={\"left\"}>\r\n                    <img src={bestRank.image} className={\"rank-img\"} alt={bestRank.name}/>\r\n                    <div className={\"name\"}>{name}</div>\r\n                </div>\r\n                <div className={\"right\"}>\r\n                    <FontAwesomeIcon className={\"arrow\"} icon={faChevronCircleDown}/>\r\n                </div>\r\n            </div>\r\n            <div className={`body`}>\r\n                <AnimateHeight duration={500} height={active ? `auto` : 0}>\r\n                    {Object.values(regions).map(regionToItem)}\r\n                </AnimateHeight>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SeasonLabel;","import React from \"react\";\r\nimport SeasonLabel from \"../components/SeasonLabel\";\r\n\r\nconst SeasonsView = ({seasons}) => {\r\n\r\n    const seasonToItem = (season) => {\r\n        const name = season.name;\r\n        const regions = season.regions;\r\n\r\n        return <SeasonLabel key={name} name={name} regions={regions}/>;\r\n    };\r\n\r\n    return (\r\n        <div className={\"container seasonsView\"}>\r\n            <div className={\"row\"}>\r\n                {seasons ? Object.values(seasons).map(seasonToItem) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SeasonsView;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst UserNavView = ({url}) => {\r\n    return (\r\n        <nav>\r\n            <div className={\"container\"}>\r\n                <div className={\"row\"}>\r\n                    <div className={\"col-3\"}>\r\n                        <Link to={`${url}`}>Overall</Link>\r\n                    </div>\r\n                    <div className={\"col-3\"}>\r\n                        <Link to={`${url}/seasons`}>Seasons</Link>\r\n                    </div>\r\n                    <div className={\"col-3\"}>\r\n                        <Link to={`${url}/operators`}>Operators</Link>\r\n                    </div>\r\n                    <div className={\"col-3\"}>\r\n                        <Link to={`${url}/weapons`}>Weapons</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\nexport default UserNavView;","import {useEffect, useReducer} from \"react\";\r\n\r\nconst initialState = {sortedState: [], sortedRecords: []};\r\n\r\nconst reducer = (state, action) => {\r\n    let sortedState = state.sortedState;\r\n    let sortedRecords = state.sortedRecords;\r\n\r\n    for(let i = 0; i < sortedState.length; i++) {\r\n        if (i === action.colNumber) sortedState[i] = sortedState[i] === 1 ? -1 : 1;\r\n        else sortedState[i] = 0;\r\n    }\r\n\r\n    sortedRecords = sortedRecords.sort((a, b) => {\r\n        if(sortedState[action.colNumber] === 1)\r\n            return Object.values(b)[action.colNumber] - Object.values(a)[action.colNumber];\r\n        else\r\n            return Object.values(a)[action.colNumber] - Object.values(b)[action.colNumber];\r\n    });\r\n\r\n    return {sortedState, sortedRecords};\r\n};\r\n\r\nconst useTableController = (records, rows, columns) => {\r\n    const [state, dispatch] = useReducer(reducer, {sortedState: [], sortedRecords: []});\r\n\r\n    useEffect(() => {\r\n        let tab = [];\r\n        for(let i = 0; i < columns; i++) tab.push(0);\r\n\r\n        state.sortedState = tab;\r\n        state.sortedRecords = records;\r\n    }, []);\r\n\r\n    const sortBy = colNumber => dispatch({colNumber});\r\n\r\n    return [sortBy];\r\n};\r\nexport {useTableController};","import React, {useState} from \"react\";\r\nimport {useTableController} from \"../Hooks/useTableController\";\r\n\r\nimport \"./../css/components/table.css\";\r\n\r\nconst Table = ({id, attributes, records, firstFieldAttribute}) => {\r\n    const [sortBy] = useTableController(records, records.length, attributes.length);\r\n    const [sortedAttribute, setSortedAttribute] = useState(-1);\r\n\r\n    const handleClick = key => {\r\n        console.log(\"Clicked!\");\r\n        sortBy(key);\r\n        setSortedAttribute(key);\r\n    };\r\n\r\n    const attributeToItem = (key, attribute) => {\r\n        if(firstFieldAttribute) {\r\n            if(!key) return <th className={\"firstField\"} key={key}>{attribute}</th>\r\n            else return <th className={sortedAttribute === key ? \"clicked\" : null}\r\n                            key={key} onClick={() => handleClick(key)}>{attribute}</th>\r\n        } else return <th className={sortedAttribute === key ? \"clicked\" : null}\r\n                          key={key} onClick={() => handleClick(key)}>{attribute}</th>\r\n    };\r\n\r\n    const headGenerator = () => {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {attributes.map((value, key) => attributeToItem(key, value))}\r\n                </tr>\r\n            </thead>\r\n        )\r\n    };\r\n\r\n    const tdToItem = (key, td) => {\r\n        if(firstFieldAttribute) return <td key={key} className={key === 0 ? \"firstField\" : null}>{td}</td>\r\n        else return <td>{td}</td>\r\n    };\r\n\r\n    const trToItem = (key, tr) => {\r\n        return <tr key={`tr-${key}`}>{Object.values(tr).map((value, key) => tdToItem(key, value))}</tr>\r\n    };\r\n\r\n    const bodyGenerator = () => {\r\n        console.log(records);\r\n        return (\r\n            <tbody>{records.map((value, key) => trToItem(key, value))}</tbody>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className={\"responsive-overflow-wrapper\"}>\r\n            <table key={id} className={\"table\"}>\r\n                {headGenerator()}\r\n                {bodyGenerator()}\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\nexport default Table;","import React, {useEffect, useState} from \"react\";\r\nimport Table from \"../components/Table\";\r\n\r\nconst WeaponsView = ({weapons}) => {\r\n    const [weaponsList, setWeaponsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let weaponsArray = (Object.values(weapons).map(weaponCategory => weaponCategory.list)).flat(1);\r\n        weaponsArray.forEach(weapon => delete weapon.bulletsFired);\r\n        setWeaponsList(weaponsArray);\r\n    }, []);\r\n\r\n    if(weaponsList.length) {\r\n        console.log(weaponsList);\r\n        return (\r\n            <section>\r\n                <div className={\"container\"}>\r\n                    <div className={\"row\"}>\r\n                        <div className={\"row-element\"}>\r\n                            <Table\r\n                                id={\"weapons\"}\r\n                                attributes={[\"Weapon\", \"Kills\", \"Deaths\", \"Headshots\", \"Bullets Connected\", \"Time Chosen\"]}\r\n                                records={weaponsList}\r\n                                firstFieldAttribute={true}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    } else return null;\r\n};\r\nexport default WeaponsView;","import React, {useState} from \"react\";\r\nimport Table from \"../components/Table\";\r\n\r\nconst OperatorsView = ({attackers, defenders}) => {\r\n    const [selected, setSelected] = useState(0);\r\n\r\n    const navElementToItem = (element, key) => {\r\n        let extraClasses = selected === key ? \"active\" : \"\";\r\n        return (\r\n            <div className={`title ${extraClasses}`} onClick={() => setSelected(key)}>{element}</div>\r\n        )\r\n    };\r\n\r\n    const navSection = elements => {\r\n        return (\r\n            <div className={\"nav-section row-element\"}>\r\n                {elements.map(navElementToItem)}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const navWindows = [\r\n        <Table key={\"attackers\"} id={\"attackers\"} records={attackers} firstFieldAttribute={true} attributes={[\"Operator\", \"Kills\", \"Deaths\", \"Wins\", \"Losses\", \"Headshots\", \"Melee Kills\", \"DBNO\", \"XP\", \"Play Time\"]}/>,\r\n        <Table key={\"defenders\"} id={\"defenders\"} records={defenders} firstFieldAttribute={true} attributes={[\"Operator\", \"Kills\", \"Deaths\", \"Wins\", \"Losses\", \"Headshots\", \"Melee Kills\", \"DBNO\", \"XP\", \"Play Time\"]}/>\r\n    ];\r\n\r\n    return (\r\n        <section id={\"operators\"}>\r\n            <div className={\"container\"}>\r\n                <div className={\"row\"}>\r\n                    {navSection([\"Attackers\", \"Defenders\"])}\r\n                    <div className={\"row-element\"}>\r\n                        {navWindows[selected]}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default OperatorsView;","import React, {useEffect, useState} from \"react\";\r\nimport {useParams, Switch, Route, useRouteMatch} from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {useDependency} from \"../Hooks/useDependency\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Window from \"../components/Window\";\r\nimport SeasonsView from \"./SeasonsView\";\r\nimport UserNavView from \"./UserNavView\";\r\nimport WeaponsView from \"./WeaponsView\";\r\nimport OperatorsView from \"./OperatorsView\";\r\n\r\nconst UserView = () => {\r\n    let {userId} = useParams();\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const [player, setPlayer] = useState(\"\");\r\n    const [seasons, setSeasons] = useState(\"\");\r\n    const [weapons, setWeapons] = useState(\"\");\r\n    const [defenders, setDefenders] = useState([]);\r\n    const [attackers, setAttackers] = useState([]);\r\n    const [dependency, dAdd, dDelete] = useDependency();\r\n\r\n    const getOperatorsByRole = (operators, role) => {\r\n        let operatorsCopy = Object.assign({}, operators);\r\n        let val = Object.values(operatorsCopy).filter(operator => operator.role === role);\r\n        val.forEach(attacker => {\r\n            delete attacker.badge;\r\n            delete attacker.role;\r\n            delete attacker.ctu;\r\n            delete attacker.gadget;\r\n        });\r\n\r\n        return val;\r\n    };\r\n\r\n    const getPlayerStats = () => {\r\n        const apiPath = `${process.env.REACT_APP_API_DOMAIN}/user/`;\r\n        const platform = \"uplay/\";\r\n        dAdd();\r\n\r\n        axios.get(apiPath + platform + userId)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setPlayer(response.data);\r\n                setWeapons(response.data.pvp.weapons);\r\n                setDefenders(getOperatorsByRole(response.data.pvp.operators, \"defender\"));\r\n                setAttackers(getOperatorsByRole(response.data.pvp.operators, \"attacker\"));\r\n                dDelete();\r\n            })\r\n            .catch(res => {\r\n                dDelete();\r\n                console.log(\"Can't get data about Player from Ubi API\");\r\n            })\r\n    };\r\n\r\n    const sortSeasonsOrderByNewer = table => {\r\n        let sortedTable = Object.values(table).sort((a, b) => {\r\n            return b.id - a.id;\r\n        });\r\n\r\n        console.log(sortedTable);\r\n\r\n        return sortedTable;\r\n    };\r\n\r\n    const getSeasonsStats = () => {\r\n        const apiPath = `${process.env.REACT_APP_API_DOMAIN}/rank/all/uplay/${userId}`;\r\n        console.log(apiPath);\r\n        dAdd();\r\n\r\n        axios.get(apiPath)\r\n            .then(res => {\r\n                console.log(res.data[0]);\r\n                let sortedTable = sortSeasonsOrderByNewer(res.data[0].seasons);\r\n                setSeasons(sortedTable);\r\n                dDelete();\r\n\r\n            })\r\n            .catch(res => {\r\n                dDelete();\r\n                console.log(\"Can't get data about Seasons from Ubi API\");\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPlayerStats();\r\n        getSeasonsStats();\r\n    }, []);\r\n\r\n    const playerStats = () => {\r\n        const overallWindow = player ? {\r\n            \"Time Played\": (player.pvp.general.playtime / 3600).toFixed(2) + \"h\",\r\n            \"Matches Played\": player.pvp.general.matches,\r\n            \"Kills / Match\": (player.pvp.general.kills / player.pvp.general.matches).toFixed(3),\r\n            \"Kills\": player.pvp.general.kills,\r\n            \"Deaths\": player.pvp.general.deaths,\r\n            \"K/D Ratio\": (player.pvp.general.kills / player.pvp.general.deaths).toFixed(4),\r\n            \"Wins\": player.pvp.general.wins,\r\n            \"Losses\": player.pvp.general.losses,\r\n            \"W/L Ratio\": (player.pvp.general.wins / player.pvp.general.losses).toFixed(4),\r\n            \"Bullets fired\": player.pvp.general.bulletsFired,\r\n            \"Bullets Connected\": player.pvp.general.bulletsConnected,\r\n            \"Accuracy\": (player.pvp.general.bulletsConnected / player.pvp.general.bulletsFired * 100).toFixed(2) + \"%\"\r\n        } : null;\r\n\r\n        const teamPlayWindow = player ? {\r\n            \"Assists\": player.pvp.general.assists,\r\n            \"Revievs\": player.pvp.general.revives,\r\n            \"Gadgets destroyed\": player.pvp.general.gadgetsDestroyed,\r\n            \"Suicides\": player.pvp.general.suicides,\r\n            \"Barricades\": player.pvp.general.barricadesDeployed,\r\n            \"Reinforcments\": player.pvp.general.reinforcementsDeployed,\r\n            \"Rappel Breaches\": player.pvp.general.rappelBreaches,\r\n            \"Down but no out\": player.pvp.general.dbno,\r\n            \"DBNO assist\": player.pvp.general.dbnoAssists\r\n        } : null;\r\n\r\n        const killsBrakdownWindow = player ? {\r\n            \"Total kills\": player.pvp.general.kills,\r\n            \"Blind kills\": player.pvp.general.blindKills,\r\n            \"Melee kills\": player.pvp.general.meleeKills,\r\n            \"Penetration kills\": player.pvp.general.penetrationKills,\r\n            \"Headshots\": player.pvp.general.headshots,\r\n            \"Headshot %\": (player.pvp.general.headshots / player.pvp.general.kills * 100).toFixed(2) + \"%\"\r\n        } : null;\r\n\r\n        return (\r\n            <section>\r\n                <div className={\"container\"}>\r\n                    <div className={\"player-name\"}>{player.name}</div>\r\n                    <div className={\"row\"}>\r\n                        <Window title={\"Overall Stats\"} className={\"col-12\"} col={3} stats={overallWindow}/>\r\n                        <Window title={\"Team Play\"} className={\"col-12\"} col={3} stats={teamPlayWindow}/>\r\n                        <Window title={\"Kills Breakdown\"} className={\"col-12\"} col={2} stats={killsBrakdownWindow}/>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    };\r\n\r\n    const loadingSection = () => {\r\n        return (\r\n            <div className={\"loading\"}>\r\n                <ClipLoader size={50} color={\"#09d3ac\"} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <UserNavView url={url}/>\r\n            <Switch>\r\n                <Route exact path={path} component={() => dependency ? loadingSection() : playerStats()}/>\r\n                <Route path={`${path}/seasons`} component={() => dependency ? loadingSection() : <SeasonsView seasons={seasons}/>}/>\r\n                <Route path={`${path}/weapons`} component={() => dependency ? loadingSection() : <WeaponsView weapons={weapons}/>}/>\r\n                <Route path={`${path}/operators`} component={() => dependency ? loadingSection() : <OperatorsView attackers={attackers} defenders={defenders}/>}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n};\r\nexport default UserView;","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\n\r\nimport SearchPlayerView from \"./SearchPlayerView\";\r\nimport UserView from \"./UserView\";\r\n\r\nconst ApplicationView = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={\"/\"} component={() => <SearchPlayerView/>} />\r\n            <Route path={\"/user/:userId\"} component={() => <UserView/>} />\r\n        </Switch>\r\n    );\r\n};\r\nexport default ApplicationView;","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/theme.css';\n\nimport ApplicationView from \"./views/ApplicationView\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n          <ApplicationView/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}