{"version":3,"sources":["Hooks/useDependency.js","views/SearchPlayerView.js","components/Window.js","components/SeasonLabel.js","views/SeasonsView.js","views/UserNavView.js","views/UserView.js","views/ApplicationView.js","App.js","serviceWorker.js","index.js"],"names":["initialState","count","dependencies","reducer","state","action","type","Error","useDependency","useReducer","dispatch","console","log","SearchPlayerView","callback","useState","inputUser","setInputUser","users","setUsers","dependency","dAdd","dDelete","history","useHistory","userItem","user","key","p_id","className","onClick","id","push","p_name","onSubmit","event","axios","get","then","response","data","results","finally","preventDefault","placeholder","onChange","target","value","icon","faSearch","size","color","map","Window","title","stats","col","Object","entries","item","SeasonLabel","name","regions","bestRank","setBestRank","active","setActive","useEffect","best","values","max","region","src","image","alt","faChevronCircleDown","duration","height","matches","current","mmr","kills","deaths","wins","losses","abandons","regionStatsItem","SeasonsView","seasons","season","UserNavView","url","to","UserView","userId","useParams","useRouteMatch","path","player","setPlayer","setSeasons","apiPath","process","getPlayerStats","res","getSeasonsStats","exact","overallWindow","pvp","general","playtime","toFixed","bulletsFired","bulletsConnected","teamPlayWindow","assists","revives","gadgetsDestroyed","suicides","barricadesDeployed","reinforcementsDeployed","rappelBreaches","dbno","dbnoAssists","killsBrakdownWindow","blindKills","meleeKills","penetrationKills","headshots","playerStats","ApplicationView","component","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.185724b3.chunk.js","sourcesContent":["import {useState, useReducer} from \"react\";\r\n\r\nconst initialState = {count: 0, dependencies: false};\r\n\r\nconst reducer = (state, action) => {\r\n    let count = state.count;\r\n    let dependencies = state.dependencies;\r\n\r\n    switch(action.type) {\r\n        case 'add':\r\n            if(state.count === 0) dependencies = true;\r\n            count++;\r\n\r\n            return {count, dependencies};\r\n        case 'delete':\r\n            if(state.count === 1) dependencies = false;\r\n            count--;\r\n\r\n            return {count, dependencies}\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nconst useDependency = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const addDependecy = () => {\r\n        console.log(\"counter before add \");\r\n        console.log(state);\r\n        dispatch({type: 'add'});\r\n    };\r\n\r\n    const deleteDependency = () => {\r\n        console.log(\"counter before delete \");\r\n        console.log(state);\r\n        dispatch({type: 'delete'});\r\n    };\r\n\r\n    return [state.dependencies, addDependecy, deleteDependency];\r\n};\r\nexport {useDependency};","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport {useDependency} from \"../Hooks/useDependency\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport \"../css/list.css\";\r\n\r\nconst SearchPlayerView = ({callback}) => {\r\n    const [inputUser, setInputUser] = useState(\"\");\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const [dependency, dAdd, dDelete] = useDependency();\r\n\r\n    let history = useHistory();\r\n\r\n    const getUsers = () => {\r\n        const searchAPI = \"https://r6tab.com/api/search.php?platform=uplay&search=\";\r\n\r\n        dAdd();\r\n\r\n        axios.get(searchAPI + inputUser)\r\n            .then((response) => {\r\n                console.log(response);\r\n                setUsers(response.data.results);\r\n            })\r\n            .finally((response) => {\r\n                dDelete();\r\n            })\r\n    };\r\n\r\n    const setUser = (id) => {\r\n        history.push(`/user/${id}`);\r\n    };\r\n\r\n    const usersSection = () => {\r\n        return (\r\n            <div className={\"col-6\"}>\r\n                <div className={\"users-list\"}>\r\n                    {users ? users.map(userItem) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userItem = (user) => {\r\n        return (\r\n            <div key={user.p_id} className={\"user\"} onClick={() => setUser(user.p_id)}>\r\n                <div className={\"name\"}>{user.p_name}</div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setInputUser(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        getUsers();\r\n        event.preventDefault();\r\n    };\r\n\r\n    const loadingSection = () => {\r\n        return (\r\n            <div className={\"loading\"}>\r\n                <ClipLoader size={50} color={\"#09d3ac\"} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <div className={\"container\"}>\r\n                <div className={\"row justify-center\"}>\r\n                    <div className={\"col-12\"}>\r\n                        <div className={\"title\"}>Rainbow Six Siege Stats</div>\r\n                    </div>\r\n                    <form className={\"col-6\"} onSubmit={handleSubmit}>\r\n                        <input placeholder={\"Type your username in R6\"} onChange={handleChange}>\r\n                        </input>\r\n                        <FontAwesomeIcon className={\"ml-3\"} icon={faSearch}/>\r\n                    </form>\r\n                </div>\r\n                <div className={\"row justify-center\"}>\r\n                    {dependency ? loadingSection() : usersSection()}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default SearchPlayerView;","import React from \"react\";\r\n\r\nconst Window = ({className, title, stats, col}) => {\r\n    const statsToItem = (item) => {\r\n        return  (\r\n            <div key={item[0]} className={`item col-${12/col}`}>\r\n                <div className={\"prop-name\"}>{item[0]}</div>\r\n                <div className={\"prop-value\"}>{item[1]}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={`window ${className}`}>\r\n            <div className={\"title\"}>{title}</div>\r\n            <div className={\"items\"}>\r\n                {stats ? Object.entries(stats).map(statsToItem) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Window;","import React, {useState, useEffect} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faChevronCircleDown} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AnimateHeight from \"react-animate-height\";\r\n\r\nimport \"../css/components/seasonLabel.css\";\r\n\r\nconst SeasonLabel = ({name, regions}) => {\r\n    const [bestRank, setBestRank] = useState(\"\");\r\n    const [active, setActive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let best = Object.values(regions)[0].max;\r\n\r\n        for(let region of Object.values(regions))\r\n            if (best.id < region.max.id) best = region.max;\r\n\r\n        setBestRank(best);\r\n    }, []);\r\n\r\n    const regionStatsItem = item => {\r\n        return (\r\n            <div className={\"region-stats\"}>\r\n                <div className={\"col-6\"}>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>MMR</div>\r\n                        <div className={\"value\"}>{item.current.mmr}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Kills</div>\r\n                        <div className={\"value\"}>{item.kills}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Deaths</div>\r\n                        <div className={\"value\"}>{item.deaths}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={\"col-6\"}>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Matches</div>\r\n                        <div className={\"value\"}>{item.matches}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Wins</div>\r\n                        <div className={\"value\"}>{item.wins}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Losses</div>\r\n                        <div className={\"value\"}>{item.losses}</div>\r\n                    </div>\r\n                    <div className={\"property\"}>\r\n                        <div className={\"key\"}>Abandons</div>\r\n                        <div className={\"value\"}>{item.abandons}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const regionToItem = item => {\r\n        if(item.matches !== 0) return regionStatsItem(item);\r\n        else return null;\r\n    };\r\n\r\n    const handleClick = () => {\r\n        console.log(active);\r\n        setActive(!active);\r\n    };\r\n\r\n    return (\r\n        <div className={\"season-label\"}>\r\n            <div className={\"head\"} onClick={handleClick}>\r\n                <div className={\"left\"}>\r\n                    <img src={bestRank.image} className={\"rank-img\"} alt={bestRank.name}/>\r\n                    <div className={\"name\"}>{name}</div>\r\n                </div>\r\n                <div className={\"right\"}>\r\n                    <FontAwesomeIcon className={\"arrow\"} icon={faChevronCircleDown}/>\r\n                </div>\r\n            </div>\r\n            <div className={`body`}>\r\n                <AnimateHeight duration={500} height={active ? `auto` : 0}>\r\n                    {Object.values(regions).map(regionToItem)}\r\n                </AnimateHeight>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SeasonLabel;","import React from \"react\";\r\nimport SeasonLabel from \"../components/SeasonLabel\";\r\n\r\nconst SeasonsView = ({seasons}) => {\r\n\r\n    const seasonToItem = (season) => {\r\n        const name = season.name;\r\n        const regions = season.regions;\r\n\r\n        return <SeasonLabel key={name} name={name} regions={regions}/>;\r\n    };\r\n\r\n    return (\r\n        <div className={\"container seasonsView\"}>\r\n            <div className={\"row\"}>\r\n                {seasons ? Object.values(seasons).map(seasonToItem) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SeasonsView;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst UserNavView = ({url}) => {\r\n    return (\r\n        <nav>\r\n            <div className={\"container\"}>\r\n                <div className={\"row\"}>\r\n                    <div className={\"col-6\"}>\r\n                        <Link to={`${url}`}>Global stats</Link>\r\n                    </div>\r\n                    <div className={\"col-6\"}>\r\n                        <Link to={`${url}/seasons`}>Seasons</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\nexport default UserNavView;","import React, {useEffect, useState} from \"react\";\r\nimport {useParams, Switch, Route, useRouteMatch} from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {useDependency} from \"../Hooks/useDependency\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Window from \"../components/Window\";\r\nimport SeasonsView from \"./SeasonsView\";\r\nimport UserNavView from \"./UserNavView\";\r\n\r\nconst UserView = () => {\r\n    let {userId} = useParams();\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const [player, setPlayer] = useState(\"\");\r\n    const [seasons, setSeasons] = useState(\"\");\r\n    const [dependency, dAdd, dDelete] = useDependency();\r\n\r\n    const getPlayerStats = () => {\r\n        const apiPath = `${process.env.REACT_APP_API_DOMAIN}/user/`;\r\n        const platform = \"uplay/\";\r\n        dAdd();\r\n\r\n        axios.get(apiPath + platform + userId)\r\n            .then(response => {\r\n                dDelete();\r\n                console.log(response.data);\r\n                setPlayer(response.data);\r\n            })\r\n    };\r\n\r\n    const getSeasonsStats = () => {\r\n        const apiPath = `${process.env.REACT_APP_API_DOMAIN}/rank/all/uplay/${userId}`;\r\n        console.log(apiPath);\r\n        dAdd();\r\n\r\n        axios.get(apiPath)\r\n            .then(res => {\r\n                dDelete();\r\n                console.log(res.data[0]);\r\n                setSeasons(res.data[0].seasons);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPlayerStats();\r\n        getSeasonsStats();\r\n    }, []);\r\n\r\n    const loadingSection = () => {\r\n        return (\r\n            <div className={\"loading\"}>\r\n                <ClipLoader size={50} color={\"#09d3ac\"} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const playerStats = () => {\r\n        const overallWindow = player ? {\r\n            \"Time Played\": (player.pvp.general.playtime / 3600).toFixed(2) + \"h\",\r\n            \"Matches Played\": player.pvp.general.matches,\r\n            \"Kills / Match\": (player.pvp.general.kills / player.pvp.general.matches).toFixed(3),\r\n            \"Kills\": player.pvp.general.kills,\r\n            \"Deaths\": player.pvp.general.deaths,\r\n            \"K/D Ratio\": (player.pvp.general.kills / player.pvp.general.deaths).toFixed(4),\r\n            \"Wins\": player.pvp.general.wins,\r\n            \"Losses\": player.pvp.general.losses,\r\n            \"W/L Ratio\": (player.pvp.general.wins / player.pvp.general.losses).toFixed(4),\r\n            \"Bullets fired\": player.pvp.general.bulletsFired,\r\n            \"Bullets Connected\": player.pvp.general.bulletsConnected,\r\n            \"Accuracy\": (player.pvp.general.bulletsConnected / player.pvp.general.bulletsFired * 100).toFixed(2) + \"%\"\r\n        } : null;\r\n\r\n        const teamPlayWindow = player ? {\r\n            \"Assists\": player.pvp.general.assists,\r\n            \"Revievs\": player.pvp.general.revives,\r\n            \"Gadgets destroyed\": player.pvp.general.gadgetsDestroyed,\r\n            \"Suicides\": player.pvp.general.suicides,\r\n            \"Barricades\": player.pvp.general.barricadesDeployed,\r\n            \"Reinforcments\": player.pvp.general.reinforcementsDeployed,\r\n            \"Rappel Breaches\": player.pvp.general.rappelBreaches,\r\n            \"Down but no out\": player.pvp.general.dbno,\r\n            \"DBNO assist\": player.pvp.general.dbnoAssists\r\n        } : null;\r\n\r\n        const killsBrakdownWindow = player ? {\r\n            \"Total kills\": player.pvp.general.kills,\r\n            \"Blind kills\": player.pvp.general.blindKills,\r\n            \"Melee kills\": player.pvp.general.meleeKills,\r\n            \"Penetration kills\": player.pvp.general.penetrationKills,\r\n            \"Headshots\": player.pvp.general.headshots,\r\n            \"Headshot %\": (player.pvp.general.headshots / player.pvp.general.kills * 100).toFixed(2) + \"%\"\r\n        } : null;\r\n\r\n        return (\r\n            <section>\r\n                <div className={\"container\"}>\r\n                    <div className={\"player-name\"}>{player.name}</div>\r\n                    <div className={\"row\"}>\r\n                        <Window title={\"Overall Stats\"} className={\"col-12\"} col={3} stats={overallWindow}/>\r\n                        <Window title={\"Team Play\"} className={\"col-12\"} col={3} stats={teamPlayWindow}/>\r\n                        <Window title={\"Kills Breakdown\"} className={\"col-12\"} col={2} stats={killsBrakdownWindow}/>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <UserNavView url={url}/>\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    {dependency ? loadingSection() : playerStats()}\r\n                </Route>\r\n                <Route path={`${path}/seasons`}>\r\n                    <SeasonsView seasons={seasons}/>\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n};\r\nexport default UserView;","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\n\r\nimport SearchPlayerView from \"./SearchPlayerView\";\r\nimport UserView from \"./UserView\";\r\n\r\nconst ApplicationView = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={\"/\"} component={() => <SearchPlayerView/>} />\r\n            <Route path={\"/user/:userId\"} component={() => <UserView/>} />\r\n        </Switch>\r\n    );\r\n};\r\nexport default ApplicationView;","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/theme.css';\n\nimport ApplicationView from \"./views/ApplicationView\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n          <ApplicationView/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}