{"version":3,"sources":["logo.svg","Hooks/useDependency.js","components/SearchPlayer.js","class/PlayerStats.js","components/Window.js","components/UserComponent.js","components/ApplicationView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","count","dependencies","reducer","state","action","type","Error","useDependency","useReducer","dispatch","console","log","withRouter","callback","useState","inputUser","setInputUser","users","setUsers","dependency","dAdd","dDelete","history","useHistory","userItem","user","key","p_id","className","onClick","id","push","p_name","onSubmit","event","axios","get","then","response","data","results","finally","preventDefault","placeholder","onChange","target","value","icon","faSearch","size","color","map","PlayerStats","init","found","playerfound","updateDon","updatedon","favAttacker","favattacker","favDefender","favdefender","name","level","p_level","playTime","utime","kd","visitors","p_visitors","currentRank","p_currentrank","currentMmr","p_currentmmr","maxRank","p_maxrank","maxMmr","p_maxmmr","skillRating","p_skillrating","ranked","rankedTimePlayed","rankedKills","rankedDeaths","rankedWins","rankedLosses","casualTimePlayed","casualKills","casualDeaths","casualWins","casualLosses","bombWins","bombLosses","secureWins","secureLosses","hostageWins","hostageLosses","totalBullets","headShots","totalMelees","totalRevives","totalSuicides","NA_wins","NA_losses","NA_abandons","NA_maxmmr","NA_maxrank","EU_wins","EU_losses","EU_abandons","EU_maxmmr","EU_maxrank","AS_wins","AS_losses","AS_abandons","AS_maxmmr","AS_maxrank","getFixedTime","time","parseInt","Window","title","params","col","Array","from","item","UserComponent","userId","useParams","player","setPlayer","useEffect","playerStats","window1","Map","set","window2","window3","window4","playerStatsSection","setUserId","setUserIdCallback","exact","path","component","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3a3eb295.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {useState, useReducer} from \"react\";\r\n\r\nconst initialState = {count: 0, dependencies: false};\r\n\r\nconst reducer = (state, action) => {\r\n    let count = state.count;\r\n    let dependencies = state.dependencies;\r\n\r\n    switch(action.type) {\r\n        case 'add':\r\n            if(state.count === 0) dependencies = true;\r\n            count++;\r\n\r\n            return {count, dependencies};\r\n        case 'delete':\r\n            if(state.count === 1) dependencies = false;\r\n            count--;\r\n\r\n            return {count, dependencies}\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nconst useDependency = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const addDependecy = () => {\r\n        console.log(\"counter before add \");\r\n        console.log(state);\r\n        dispatch({type: 'add'});\r\n    };\r\n\r\n    const deleteDependency = () => {\r\n        console.log(\"counter before delete \");\r\n        console.log(state);\r\n        dispatch({type: 'delete'});\r\n    };\r\n\r\n    return [state.dependencies, addDependecy, deleteDependency];\r\n};\r\nexport {useDependency};","import React, {useState} from \"react\";\r\nimport {useHistory, withRouter} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport {useDependency} from \"../Hooks/useDependency\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport \"../css/list.css\";\r\n\r\nconst SearchPlayer = ({callback}) => {\r\n    const [inputUser, setInputUser] = useState(\"\");\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const [dependency, dAdd, dDelete] = useDependency();\r\n\r\n    let history = useHistory();\r\n\r\n    const getUsers = () => {\r\n        const searchAPI = \"https://r6tab.com/api/search.php?platform=uplay&search=\";\r\n\r\n        dAdd();\r\n\r\n        axios.get(searchAPI + inputUser)\r\n            .then((response) => {\r\n                console.log(response);\r\n                setUsers(response.data.results);\r\n                //callback(2);\r\n                //history.push(\"/user\");\r\n            })\r\n            .finally((response) => {\r\n                dDelete();\r\n            })\r\n    };\r\n\r\n    const setUser = (id) => {\r\n        history.push(`/user/${id}`);\r\n    };\r\n\r\n    const usersSection = () => {\r\n        return (\r\n            <div className={\"col-6\"}>\r\n                <div className={\"users-list\"}>\r\n                    {users ? users.map(userItem) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userItem = (user) => {\r\n        return (\r\n            <div key={user.p_id} className={\"user\"} onClick={() => setUser(user.p_id)}>\r\n                <div className={\"name\"}>{user.p_name}</div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setInputUser(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        getUsers();\r\n        event.preventDefault();\r\n    };\r\n\r\n    const loadingSection = () => {\r\n        return (\r\n            <div className={\"loading\"}>\r\n                <ClipLoader size={50} color={\"#09d3ac\"} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <div className={\"container\"}>\r\n                <div className={\"row justify-center\"}>\r\n                    <div className={\"col-12\"}>\r\n                        <div className={\"title\"}>Rainbow Six Siege Stats</div>\r\n                    </div>\r\n                    <form className={\"col-6\"} onSubmit={handleSubmit}>\r\n                        <input placeholder={\"Type your username in R6\"} onChange={handleChange}>\r\n                        </input>\r\n                        <FontAwesomeIcon className={\"ml-3\"} icon={faSearch}/>\r\n                    </form>\r\n                </div>\r\n                <div className={\"row justify-center\"}>\r\n                    {dependency ? loadingSection() : usersSection()}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default withRouter(SearchPlayer);","class PlayerStats {\r\n    init = (data) => {\r\n        this.found = data.playerfound;\r\n        this.updateDon = data.updatedon;\r\n        this.favAttacker = data.favattacker;\r\n        this.favDefender = data.favdefender;\r\n        this.name = data.p_name;\r\n        this.level = data.p_level;\r\n        this.playTime = data.utime;\r\n        this.kd = data.kd;\r\n        this.visitors = data.p_visitors;\r\n        this.currentRank = data.p_currentrank;\r\n        this.currentMmr = data.p_currentmmr;\r\n        this.maxRank = data.p_maxrank;\r\n        this.maxMmr = data.p_maxmmr;\r\n        this.skillRating = data.p_skillrating;\r\n\r\n        this.ranked = data.ranked;\r\n        this.rankedTimePlayed = data.data[0];\r\n        this.rankedKills = data.data[1];\r\n        this.rankedDeaths = data.data[2];\r\n        this.rankedWins = data.data[3];\r\n        this.rankedLosses = data.data[4];\r\n\r\n        this.casualTimePlayed = data.data[5];\r\n        this.casualKills = data.data[6];\r\n        this.casualDeaths = data.data[7];\r\n        this.casualWins = data.data[8];\r\n        this.casualLosses = data.data[9];\r\n\r\n        this.bombWins = data.data[10];\r\n        this.bombLosses = data.data[11];\r\n\r\n        this.secureWins = data.data[12];\r\n        this.secureLosses = data.data[13];\r\n\r\n        this.hostageWins = data.data[14];\r\n        this.hostageLosses = data.data[15];\r\n\r\n        this.totalBullets = data.data[16];\r\n        this.headShots = data.data[17];\r\n        this.totalMelees = data.data[18];\r\n        this.totalRevives = data.data[19];\r\n        this.totalSuicides = data.data[20];\r\n\r\n        this.NA_wins = data.data[21];\r\n        this.NA_losses = data.data[22];\r\n        this.NA_abandons = data.data[23];\r\n        this.NA_maxmmr = data.data[24];\r\n        this.NA_maxrank = data.data[25];\r\n\r\n        this.EU_wins = data.data[26];\r\n        this.EU_losses = data.data[27];\r\n        this.EU_abandons = data.data[28];\r\n        this.EU_maxmmr = data.data[29];\r\n        this.EU_maxrank = data.data[30];\r\n\r\n        this.AS_wins = data.data[31];\r\n        this.AS_losses = data.data[32];\r\n        this.AS_abandons = data.data[33];\r\n        this.AS_maxmmr = data.data[34];\r\n        this.AS_maxrank = data.data[35];\r\n    };\r\n\r\n    getFixedTime = (time) => {\r\n        return parseInt(time / 3600);\r\n    }\r\n}\r\nexport default PlayerStats;","import React from \"react\";\r\n\r\nconst Window = ({title, params, col}) => {\r\n    console.log(title);\r\n\r\n    const paramToItem = (item) => {\r\n        return  (\r\n            <div key={item[0]} className={\"item\"}>\r\n                <div className={\"prop-name\"}>{item[0]}</div>\r\n                <div className={\"prop-value\"}>{item[1]}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={`col-${col} window`}>\r\n            <div className={\"title\"}>{title}</div>\r\n            <div className={\"items\"}>\r\n                {params ? Array.from(params).map(paramToItem) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Window;","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport PlayerStats from \"../class/PlayerStats\";\r\nimport {useDependency} from \"../Hooks/useDependency\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Window from \"./Window\";\r\n\r\nconst UserComponent = () => {\r\n    let {userId} = useParams();\r\n\r\n    const [player, setPlayer] = useState(new PlayerStats());\r\n    const [dependency, dAdd, dDelete] = useDependency();\r\n\r\n    useEffect(() => {\r\n        const apiPath = \"https://r6tab.com/api/player.php?p_id=\";\r\n        let playerStats = new PlayerStats();\r\n\r\n        dAdd();\r\n\r\n        axios.get(apiPath + userId)\r\n            .then(response => {\r\n                dDelete();\r\n                playerStats.init(response.data);\r\n                setPlayer(playerStats);\r\n            })\r\n    }, []);\r\n\r\n    const playerStatsSection = () => {\r\n        let window1 = new Map().set(\"Wins\", player.rankedWins).set(\"Losses\", player.rankedLosses)\r\n            .set(\"Time played\", `${player.getFixedTime(player.rankedTimePlayed)}h`).set(\"Kills\", player.rankedKills).set(\"Deaths\", player.rankedDeaths);\r\n        let window2 = new Map().set(\"Current Level\", player.level).set(\"Current MMR\", player.currentMmr);\r\n        let window3 = new Map().set(\"Attacker\", player.favAttacker).set(\"Defender\", player.favDefender);\r\n        let window4 = new Map().set(\"Visitors\", player.visitors);\r\n\r\n        return (\r\n            <section>\r\n                <div className={\"container\"}>\r\n                    <div className={\"player-name\"}>{player.name}</div>\r\n                    <div className={\"row\"}>\r\n                        <Window title={\"Ranked\"} params={window1} col={12}/>\r\n                        <Window title={\"More Ranked Stats\"} params={window2} col={6}/>\r\n                        <Window title={\"Favorite operators\"} params={window3} col={6}/>\r\n                        <Window title={\"\"} params={window4} col={12}/>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    const loadingSection = () => {\r\n        return (\r\n            <div className={\"loading\"}>\r\n                <ClipLoader size={50} color={\"#09d3ac\"} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return dependency ? loadingSection() : playerStatsSection();\r\n};\r\nexport default UserComponent;","import React, {useState} from \"react\";\r\nimport SearchPlayer from \"./SearchPlayer\";\r\nimport UserComponent from \"./UserComponent\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\nconst ApplicationView = () => {\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const setUserIdCallback = (userId) => {\r\n        setUserId(userId);\r\n        console.log(userId);\r\n    };\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={\"/\"} component={() => <SearchPlayer callback={setUserIdCallback}/>} />\r\n            <Route path={\"/user/:userId\"} component={() => <UserComponent userId={userId}/>} />\r\n        </Switch>\r\n    );\r\n};\r\nexport default withRouter(ApplicationView);","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/theme.css';\n\nimport ApplicationView from \"./components/ApplicationView\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <ApplicationView/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}